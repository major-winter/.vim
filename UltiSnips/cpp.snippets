snippet cp "CP" 
#include<bits/stdc++.h>
using namespace std;
#define ln '\n'
#define mod 998244353
#define ll long long
#define limit 200010
#define max 1000000000
#define all(n) (n).begin(), (n).end()
#define pb push_back
#define sz(x) int((x).size())
#define bg(x) begin(x)
#define rall(x) x.rbegin(), x.rend()
#define sor(x) sort(all(x))
#define rsz resize
#define ins insert
#define eb emplace_back
#define ft front()
#define bk back()
#define FOR(i,a,b) for (int i = (a); i < (b); ++i)
#define F0R(i,a) FOR(i,0,a)
#define ROF(i,a,b) for (int i = (b)-1; i >= (a); --i)
#define R0F(i,a) ROF(i,0,a)
#define rep(a) F0R(_,a)
#define capacity first
#define amount second
#define each(a,x) for (auto& a: x)
const int MOD = (int)1e9+7; // 998244353;
const int MX = (int)2e5+5;
const ll BIG = 1e18;
void setIO(string name = "") {
ios_base::sync_with_stdio(0);
cin.tie(0);
if (name.size()) {
freopen((name + ".in").c_str(), "r", stdin);
freopen((name + ".out").c_str(), "w", stdout);
}
}
int main() {
    setIO("mixmilk");
    vector<pair<ll,ll>> milks(3);
    FOR(i,0, 3) {
        ll c, m;
        cin >> c >> m;
        milks[i] = make_pair(c,m);
    }
    int pours = 100;
    FOR(i, 0, pours) {
        int cur = (i) % 3;
        int next = (i + 1) % 3;
        ll amt = min(milks[cur].amount, milks[next].capacity - milks[next].amount);
        milks[next].amount += amt;
        milks[cur].amount -= amt;
    }
    cout << milks[0].amount << ln;
    cout << milks[1].amount << ln;
    cout << milks[2].amount << ln;
    return 0;
}
endsnippet
